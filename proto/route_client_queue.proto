syntax = "proto3";                                                                                                                                                                                                                                          option java_multiple_files = true;                                                                                            option java_package = "io.grpc.examples.helloworld";                                                                          option java_outer_classname = "HelloWorldProto";
option objc_class_prefix = "HLW";

package client_queue;

// queue service definition (consumed by clients)
service Queue {
  // Adds a message to be queued
  rpc AddMessage(AddMessageRequest) returns (AddMessageResponse) {}
  rpc ListenForMessages(UnicastMessageRequest) returns (stream UnicastMessage) {}
  rpc ConfirmMessage(ConfirmMessageRequest) returns (ConfirmMessageResponse) {}
}

// The request message containing the message data
message AddMessageRequest {
  string data = 1; // this will probably just be json
  string queueId = 2;
}

// The response message containing queue message add success
message AddMessageResponse {
  string id = 1;
  bool success = 2;
  string info = 3;
}

// Listen for messages
// Should this be a standard 'message' type?
message UnicastMessageRequest {
  string queueId = 1;
  string messageId = 2;
}

message UnicastMessage {
  string id = 1;
  string queueId = 2;
  string data = 3; // this will probably just be json
}

// Confirm message
message ConfirmMessageRequest {
  string queueId = 1;
  string messageId = 2;
}

message ConfirmMessageResponse {
  bool success = 1;
  string info = 2;
}